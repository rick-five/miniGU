#!/usr/bin/env python3
"""
Debug script to check what GQL statements are generated by _format_insert_data
"""

# Test the _format_insert_data method directly
from minigu.python.minigu import MiniGU

# Create a MiniGU instance to access the method
db = MiniGU()

# Test data
sample_data = [
    {"name": "Alice", "age": 30, "label": "Person"},
    {"name": "Bob", "age": 25, "label": "Person"}
]

print("Input data:")
for i, item in enumerate(sample_data):
    print(f"  {i+1}. {item}")

# Test the formatting method
gql_fragment = db._format_insert_data(sample_data)
print(f"\nGenerated GQL fragment:\n{gql_fragment}")

# Test what a complete INSERT statement would look like
complete_statement = f"INSERT VERTEX {gql_fragment}"
print(f"\nComplete INSERT statement would be:\n{complete_statement}")

# Try with a single item
single_item = [{"name": "Charlie", "age": 35, "label": "Person"}]
single_gql_fragment = db._format_insert_data(single_item)
print(f"\nSingle item GQL fragment:\n{single_gql_fragment}")

# Try with different data types
mixed_data = [
    {"name": "TechCorp", "founded": 2010, "label": "Company"},
    {"title": "Manager", "salary": 5000.50, "label": "Position"}
]
mixed_gql_fragment = db._format_insert_data(mixed_data)
print(f"\nMixed data types GQL fragment:\n{mixed_gql_fragment}")

db.close()